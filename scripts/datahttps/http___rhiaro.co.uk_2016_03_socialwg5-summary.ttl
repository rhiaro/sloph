@prefix as: <http://www.w3.org/ns/activitystreams#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<https://rhiaro.co.uk/2016/03/socialwg5-summary>
  as:published "2016-03-29T10:43:39+01:00"^^xsd:dateTime ;
  as:tag "social web protocols", "socialpub", "meeting", "activitypub", "webmention", "micropub", "phd", "as2", "social web", "activitystreams", "w3c", "socialwg", "standards" ;
  as:content """# Social Web WG 5th face-to-face summary

*This post is my own opinion, and does not necessarily represent the opinion of the Social Web WG!*

See also [day 1 minutes](https://www.w3.org/wiki/Socialwg/2016-03-16-minutes) and [day 2 minutes](https://www.w3.org/wiki/Socialwg/2016-03-17-minutes).

We met in Boston on 16 and 17 March. What follows is more detail on my perspective of the main conversations we had over the two days. Clarifications and corrections welcome.

## ActivityStreams2

AS2 is inching closer to CR. Evan has made a validator at [as2.rocks](https://as2.rocks/) and done a lot of work on [conformance criteria](https://www.w3.org/wiki/Activity_Streams/Conformance) which we went through as a group and updated a little; mostly changing SHOULDs to MUSTs.

Discussed and not necessarily resolved a few new open issues, including: [considering dropping the `Relationship` object and reviving it as an extension if necessary](https://github.com/jasnell/w3c-socialwg-activitystreams/issues/289); [a proposal for a new property to say when something was deleted](https://github.com/jasnell/w3c-socialwg-activitystreams/issues/292); [weakening the SHOULD requirement on `name`](https://github.com/jasnell/w3c-socialwg-activitystreams/issues/296); [clarifying `scope` and `context`](https://github.com/jasnell/w3c-socialwg-activitystreams/issues/300).

Stay tuned for a new working draft sometime soon.

## SocialPub

The most exciting thing I thought was agreeing on the potential for convergence between the create, update and delete parts of [Activitypub](http://www.w3.org/tr/activitypub) and [Micropub](http://www.w3.org/tr/micropub).

Micropub started life as a super small and simple way for clients and servers to agree how to create content on a website by POSTing form encoded parameters to an endpoint. As a result of this simplicity, there are dozens of client and server implementations, allowing people to use each others posting clients to add posts to their site, from simple text-only posts to photos, events, RSVPs, likes, bookmarks, reposts. When Micropub needed update and delete, it grew beyond what form-encoded parameters could sensibly handle, and added in a JSON syntax which I think to date only the editor has implemented.

Activitypub uses a JSON syntax (ActivityStreams2) from the outset for create, update and delete, and when you compare this with the Micropub JSON they look remarkably similar.

My posting endpoint implements create the AP way, and endpoint discovery the MP way. It also catches Micropub form-encoded requests and translates them to AS2 JSON before proceeding, so I can still use simple Micropub clients. My posting clients [burrow](https://apps.rhiaro.co.uk/burrow) (checkins), [obtainium](https://apps.rhiaro.co.uk/obtainium) (purchases), [replicator](https://apps.rhiaro.co.uk/replicator) (food) and [seeulator](https://apps.rhiaro.co.uk/seeulator) (events, RSVPs, travel plans) all post AS2 JSON... after discovering the endpoint via `rel=micropub`. Next on my list, and well overdue at this point, is adding update and delete to both server and clients.

So I proposed we write a document that unifies the common parts of AP and MP, iron out the smaller differences, and hope this coalesces into a small create/update/delete spec which both AP and MP can reference rather than duplicate. Because modularity is good, and common modules are better! I dubbed this temporarily (or is it?) SocialPub.

So what's left in Micropub? I hear you cry. The super simple form-encoded create which is what made Micropub do so well in the first place is really what makes Micropub *micro*, so I'd like to see this be the bulk of the Micropub spec, with just a pointer to SocialPub for people who want to level up to JSON.

There are still more than a few issues to be dealt with, though we handled a few during the meeting (such as media uploads). I'll be writing SocialPub up into the [Social Web Protocols](http://www.w3.org/tr/social-web-protocols) doc next week, stay tuned.

## Demos

Jessica and Chris demo'd Media Goblin federating with pump.io! Which is cool. Which brings them a huge step closer to implementing things with AS2/AP and federating that way. They discussed how one of their main impediments had been database schema migration.

Aaron demo'd his Micropub editing UI, which allows partial edits on the post, only for data he is most likely to want to edit (tags, syndication URLs and date).

Aaron also demonstrated a new event posting interface in Quill which uses Micropub, and showed how RSVPs from Woodwind (a feed reader) work via Webmention. Tantek and Ben also demo'd RSVPs from their sites. And Ben demo'd how he can post reactjis as replies, exemplified with the poop emoticon, and there is no question that the future of the social web is in safe hands.

Frank demonstrated federation between OwnCloud servers, which uses WebDAV and CalDAV, and talked through their access control.

## Admin/Process

We also had a couple of admin/process related discussions. The first included agreeing to meet at TPAC in Lisbon in September as it already looks like there'll be critical mass to make it worthwhile.

Sandro has made a list of [issue labels](https://github.com/sandhawke/spot/labels?sort=name-asc) for github which we painstakeingly went through to make sure everyone understands them and editors are willing to use them on specs. This should help people to figure out at a glance what the current state of a spec is from the issues, as well as help passers-by to jump in if they want to get involved.""" .

